plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.34.0'
}

group = 'com.nuvalence'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://packages.confluent.io/maven/"
	}
}

ext {
	set('springCloudVersion', "2021.0.4")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.apache.kafka:kafka-clients'
	implementation 'org.apache.kafka:kafka-streams'
	//noinspection VulnerableLibrariesLocal
	implementation 'io.confluent:kafka-streams-json-schema-serde:7.2.1'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.apache.kafka:kafka-streams-test-utils'
}

tasks.named('test') {
	useJUnitPlatform()
}

docker {
	dependsOn bootJar
	name "${rootProject.name}/${project.name}"
	dockerfile file("${project.projectDir}/src/main/docker/Dockerfile")
	files tasks.bootJar.outputs, 'aggregation.jar'
}
