
aggregation:
  application:
    config:
      topology:
        inputTopicName: intopic
        outputTopicName: outtopic
      kafka:
        properties:
          "[application.id]": "aggregator"
          "[bootstrap.servers]": "kafka.default.svc.cluster.local:9092"
  image:
    repository: ghcr.io/jjrising/kafka-aggregation/aggregation
    tag: latest
  port: 8080
  replicaCount: 1
  resources:
    limits:
      cpu: 1
      memory: 1G
    requests:
      cpu: 1
      memory: 1G
  serviceAccount:
    annotations: {}

connector:
  image:
    repository: ghcr.io/jjrising/kafka-aggregation/connector
    tag: latest
  port: 8083
  replicaCount: 1
  resources:
    limits:
      cpu: 1
      memory: 1G
    requests:
      cpu: 1
      memory: 1G
  groupId: aggregation-connector
  heapOptions: "-Xms512M -Xmx512M"

generator:
  application:
    config:
      spring:
        kafka:
          bootstrap-servers: "kafka.default.svc.cluster.local:9092"
          producer:
            key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  image:
    repository: ghcr.io/jjrising/kafka-aggregation/generator
    tag: latest
  port: 8080
  replicaCount: 1
  resources:
    limits:
      cpu: 1
      memory: 1G
    requests:
      cpu: 1
      memory: 1G
  serviceAccount:
    annotations: {}

#grafana:

kafka:
  fullnameOverride: "kafka"
  provisioning:
    enabled: true
    numPartitions: 12
    topics:
      - name: intopic
        partitions: 12
        replicationFactor: 1
      - name: outtopic
        partitions: 12
        replicationFactor: 1

prometheus:
  alertmanager:
    enabled: false
  nodeExporter:
    enabled: false
  pushgateway:
    enabled: false
